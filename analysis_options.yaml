# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    deprecated_member_use_from_same_package: ignore
    invalid_annotation_target: ignore
  exclude:
    - "bin/cache/**"
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.mocks.dart"
    - "**/injector.config.dart"

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    prefer_single_quotes: true # Uncomment to enable the `prefer_single_quotes` rule
    prefer_relative_imports: true
    void_checks: true
    avoid_types_as_parameter_names: true
    control_flow_in_finally: true
    empty_statements: false
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_interpolation_to_compose_strings: true
    prefer_expression_function_bodies: true
    directives_ordering: true

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
